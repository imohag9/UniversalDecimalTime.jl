var documenterSearchIndex = {"docs":
[{"location":"api/#API-Docs","page":"API Reference","title":"API Docs","text":"","category":"section"},{"location":"api/#UniversalDecimalTime.UDT","page":"API Reference","title":"UniversalDecimalTime.UDT","text":"UDT <: UDTTimeType\n\nRepresents a specific moment in Universal Decimal Time.\n\n\n\n\n\n","category":"type"},{"location":"api/#UniversalDecimalTime.UDT-Tuple{Dates.DateTime}","page":"API Reference","title":"UniversalDecimalTime.UDT","text":"UDT(dt::Dates.DateTime)\n\nConvert a Dates.DateTime to a UDT.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.UDT-Tuple{UDTDate}","page":"API Reference","title":"UniversalDecimalTime.UDT","text":"UDT(u::UDTDate)\n\nConvert a UDTDate to a UDT.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.UDTDate","page":"API Reference","title":"UniversalDecimalTime.UDTDate","text":"UDTDate <: UDTTimeType\n\nRepresents a date in Universal Decimal Time.\n\n\n\n\n\n","category":"type"},{"location":"api/#UniversalDecimalTime.UDTDate-Tuple{Dates.Date}","page":"API Reference","title":"UniversalDecimalTime.UDTDate","text":"UDTDate(dt::Dates.Date)\n\nConvert a Dates.Date to a UDTDate.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.UDTDate-Tuple{UDT}","page":"API Reference","title":"UniversalDecimalTime.UDTDate","text":"UDTDate(u::UDT)\n\nConvert a UDT to a UDTDate.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.UDTInstant","page":"API Reference","title":"UniversalDecimalTime.UDTInstant","text":"UDTInstant{T <: UDTPeriod} <: Dates.Instant\n\nRepresents an instant in Universal Decimal Time, parameterized by a UDTPeriod type.\n\n\n\n\n\n","category":"type"},{"location":"api/#UniversalDecimalTime.UDTPeriod","page":"API Reference","title":"UniversalDecimalTime.UDTPeriod","text":"UDTPeriod\n\nAbstract type for Universal Decimal Time period types.\n\n\n\n\n\n","category":"type"},{"location":"api/#UniversalDecimalTime.UDTTimeType","page":"API Reference","title":"UniversalDecimalTime.UDTTimeType","text":"UDTTimeType\n\nAbstract type for Universal Decimal Time types.\n\n\n\n\n\n","category":"type"},{"location":"api/#Base.convert-Tuple{Type{Dates.DateTime}, UDT}","page":"API Reference","title":"Base.convert","text":"Base.convert(::Type{Dates.DateTime}, u::UDT)\n\nConvert a UDT to a Dates.DateTime.\n\n\n\n\n\n","category":"method"},{"location":"api/#Base.convert-Tuple{Type{Dates.Date}, UDTDate}","page":"API Reference","title":"Base.convert","text":"Base.convert(::Type{UDTDate}, u::Dates.Date)\n\nConvert a UDTDate to a Dates.Date.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_day-Tuple{UDTDate}","page":"API Reference","title":"UniversalDecimalTime.udt_day","text":"udt_day(u::UDTDate)\n\nGet the day component of a UDTDate.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_day-Tuple{UDT}","page":"API Reference","title":"UniversalDecimalTime.udt_day","text":"udt_day(u::UDT)\n\nGet the day component of a UDT.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_hour-Tuple{UDT}","page":"API Reference","title":"UniversalDecimalTime.udt_hour","text":"udt_hour(u::UDT)\n\nGet the hour component of a UDT.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_minute-Tuple{UDT}","page":"API Reference","title":"UniversalDecimalTime.udt_minute","text":"udt_minute(u::UDT)\n\nGet the minute component of a UDT.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_month-Tuple{UDTDate}","page":"API Reference","title":"UniversalDecimalTime.udt_month","text":"udt_month(u::UDTDate)\n\nGet the month component of a UDTDate.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_month-Tuple{UDT}","page":"API Reference","title":"UniversalDecimalTime.udt_month","text":"udt_month(u::UDT)\n\nGet the month component of a UDT.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_now-Tuple{}","page":"API Reference","title":"UniversalDecimalTime.udt_now","text":"udt_now()\n\nGet the current UDT (Universal Decimal Time).\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_second-Tuple{UDT}","page":"API Reference","title":"UniversalDecimalTime.udt_second","text":"udt_second(u::UDT)\n\nGet the second component of a UDT.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_today-Tuple{}","page":"API Reference","title":"UniversalDecimalTime.udt_today","text":"udt_today()\n\nGet the current UDTDate (Universal Decimal Time Date).\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_week-Tuple{UDTDate}","page":"API Reference","title":"UniversalDecimalTime.udt_week","text":"udt_week(u::UDTDate)\n\nGet the week component of a UDTDate.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_week-Tuple{UDT}","page":"API Reference","title":"UniversalDecimalTime.udt_week","text":"udt_week(u::UDT)\n\nGet the week component of a UDT.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_year-Tuple{UDTDate}","page":"API Reference","title":"UniversalDecimalTime.udt_year","text":"udt_year(u::UDTDate)\n\nGet the year component of a UDTDate.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_year-Tuple{UDT}","page":"API Reference","title":"UniversalDecimalTime.udt_year","text":"udt_year(u::UDT)\n\nGet the year component of a UDT.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_yearmonth-Tuple{T} where T<:UDTTimeType","page":"API Reference","title":"UniversalDecimalTime.udt_yearmonth","text":"udt_yearmonth(u::T) where {T <: UDTTimeType}\n\nGet the year and month components of a UDTTimeType as a tuple.\n\n\n\n\n\n","category":"method"},{"location":"api/#UniversalDecimalTime.udt_yearmonthweek-Tuple{UDT}","page":"API Reference","title":"UniversalDecimalTime.udt_yearmonthweek","text":"udt_yearmonthweek(u::UDT)\n\nGet the year, month, and week components of a UDT as a tuple.\n\n\n\n\n\n","category":"method"},{"location":"quick_start/#Quick-Start-Guide","page":"Quick Start","title":"Quick Start Guide","text":"","category":"section"},{"location":"quick_start/","page":"Quick Start","title":"Quick Start","text":"This tutorial will help you get started with Universal Decimal Time in Julia.","category":"page"},{"location":"quick_start/#Installation","page":"Quick Start","title":"Installation","text":"","category":"section"},{"location":"quick_start/","page":"Quick Start","title":"Quick Start","text":"First, install the package:","category":"page"},{"location":"quick_start/","page":"Quick Start","title":"Quick Start","text":"using Pkg\nPkg.add(\"UniversalDecimalTime\")","category":"page"},{"location":"quick_start/#Basic-Usage","page":"Quick Start","title":"Basic Usage","text":"","category":"section"},{"location":"quick_start/","page":"Quick Start","title":"Quick Start","text":"using UniversalDecimalTime\n\n# Create a UDT timestamp for year 2025, month 3, week 1, day 1, hour 5, minute 30, second 75\nudt = UDT(2025, 3, 1, 1, 5, 30, 75)\n# Output: 2025-03-01-01:UDT:05:30:75\n\n# Get current UDT time\nnow_udt = udt_now()\n# Example output: 2025-03-01-01:UDT:05:30:75\n\n# Get today's UDT date\ntoday_udt = udt_today()\n# Example output: 2025-03-01-01:UDT","category":"page"},{"location":"quick_start/#Accessing-Components","page":"Quick Start","title":"Accessing Components","text":"","category":"section"},{"location":"quick_start/","page":"Quick Start","title":"Quick Start","text":"You can access individual components of a UDT timestamp:","category":"page"},{"location":"quick_start/","page":"Quick Start","title":"Quick Start","text":"udt = UDT(2025, 3, 1, 1, 5, 30, 75)\n\nudt_year(udt)    # Returns 2025\nudt_month(udt)   # Returns 3\nudt_week(udt)    # Returns 1\nudt_day(udt)     # Returns 1\nudt_hour(udt)    # Returns 5\nudt_minute(udt)  # Returns 30\nudt_second(udt)  # Returns 75\n\n# Get multiple components at once\nudt_yearmonth(udt)     # Returns (2025, 3)\nudt_yearmonthweek(udt) # Returns (2025, 3, 1)","category":"page"},{"location":"quick_start/#Converting-Between-Time-Systems","page":"Quick Start","title":"Converting Between Time Systems","text":"","category":"section"},{"location":"quick_start/","page":"Quick Start","title":"Quick Start","text":"# Convert from standard DateTime to UDT\ndt = DateTime(2025, 10, 2, 14, 30, 25)\nudt_time = UDT(dt)\n\n# Convert back to standard DateTime\nstandard_time = DateTime(udt_time)\n\n# Convert between UDT and UDTDate\nudt = UDT(10, 3, 1, 1, 5, 30, 75)\nudt_date = UDTDate(udt)  # Keeps only date components\nudt_full = UDT(udt_date) # Sets time components to zero","category":"page"},{"location":"quick_start/#Time-Arithmetic","page":"Quick Start","title":"Time Arithmetic","text":"","category":"section"},{"location":"quick_start/","page":"Quick Start","title":"Quick Start","text":"udt = UDT(10, 3, 1, 1, 5, 30, 75)\n\n# Add time\nudt + UDTYear(1)       # Add one UDT year\nudt + UDTMonth(2)      # Add two UDT months\nudt + UDTDay(5)        # Add five UDT days\nudt + UDTHour(3)       # Add three UDT hours\nudt + UDTMinute(150)   # Add 150 UDT minutes (will carry over)\n\n# Multiple additions\nudt + UDTYear(1) + UDTMonth(2) + UDTDay(5)\n\n# Subtraction\nudt - UDTYear(1)\nudt - UDTMonth(2)","category":"page"},{"location":"quick_start/#Parsing-and-Formatting","page":"Quick Start","title":"Parsing and Formatting","text":"","category":"section"},{"location":"quick_start/","page":"Quick Start","title":"Quick Start","text":"# Parse from string\nudt_str = \"0010-03-01-01:UDT:05:30:75\"\nudt = UDT(udt_str)\n\n# Format as string\nstring(udt)  # Returns \"0010-03-01-01:UDT:05:30:75\"\n\n# Parse UDTDate\nudt_date_str = \"0010-03-01-01:UDT\"\nudt_date = UDTDate(udt_date_str)","category":"page"},{"location":"decimal_time_history/#History-and-Utility-of-Decimal-Time","page":"Decimal Time History","title":"History and Utility of Decimal Time","text":"","category":"section"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Decimal time is the representation of the time of day using units which are decimally related. This concept has been proposed and implemented in various forms throughout history, most notably during the French Revolution.","category":"page"},{"location":"decimal_time_history/#French-Revolutionary-Decimal-Time","page":"Decimal Time History","title":"French Revolutionary Decimal Time","text":"","category":"section"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"The most famous implementation of decimal time was during the French Revolution. The National Convention issued a decree on October 5, 1793 (revised November 24, 1793), which stated:","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"\"The day, from midnight to midnight, is divided into ten parts or hours, each part into ten others, so on until the smallest measurable portion of the duration. The hundredth part of the hour is called decimal minute; the hundredth part of the minute is called decimal second.\"","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"This created a system where:","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"1 day = 10 decimal hours\n1 decimal hour = 100 decimal minutes\n1 decimal minute = 100 decimal seconds\nTotal: 100,000 decimal seconds per day (vs. 86,400 SI seconds in standard time)","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Thus, midnight was called \"ten hours,\" noon was called \"five hours,\" and so on. This system was officially used in France from 1794 to 1800, though it never gained widespread adoption among the general population.","category":"page"},{"location":"decimal_time_history/#Why-Decimal-Time?","page":"Decimal Time History","title":"Why Decimal Time?","text":"","category":"section"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Decimal time offers several advantages:","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Simplified calculations: Since all units are powers of 10, converting between units becomes trivial (just move the decimal point).\nExample: 1.2345 decimal hours = 123.45 decimal minutes = 12345 decimal seconds\nUnified representation: Time can be represented as a single decimal number rather than separate hours, minutes, and seconds.\nEasier to compute with: Particularly useful in scientific calculations, astronomy, and computing where fractional days are commonly used.","category":"page"},{"location":"decimal_time_history/#Modern-Applications","page":"Decimal Time History","title":"Modern Applications","text":"","category":"section"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"While the French Revolutionary decimal time didn't catch on for everyday use, decimal representations of time are widely used in specialized fields:","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Astronomy: Astronomers use fractional days (where 0.5 = noon) for precise timekeeping\nComputing: Many systems represent time as seconds since an epoch (like Unix time)\nAviation: Decimal hours are used for flight planning and logbooks\nAccounting: Time is often tracked in decimal hours for payroll","category":"page"},{"location":"decimal_time_history/#Swatch-Internet-Time","page":"Decimal Time History","title":"Swatch Internet Time","text":"","category":"section"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"In 1998, Swatch introduced \"Internet Time,\" dividing the day into 1,000 \".beats\" (each 86.4 standard seconds), with @000 being midnight in Biel, Switzerland. Though not widely adopted, it demonstrates continued interest in decimal time systems.","category":"page"},{"location":"decimal_time_history/#Scientific-Decimal-Time","page":"Decimal Time History","title":"Scientific Decimal Time","text":"","category":"section"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Scientists often use decimal representations of time:","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Fractional days: Time of day represented as a fraction of a day (0.0 = midnight, 0.5 = noon)\nJulian days: Used in astronomy, counting days (including fractional parts) since a fixed epoch","category":"page"},{"location":"decimal_time_history/#Why-Universal-Decimal-Time?","page":"Decimal Time History","title":"Why Universal Decimal Time?","text":"","category":"section"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Our implementation extends the decimal concept to the full calendar:","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"1 UDT year = 10 UDT months\n1 UDT month = 10 UDT weeks\n1 UDT week = 10 UDT days\n1 UDT day = 10 UDT hours\n1 UDT hour = 100 UDT minutes\n1 UDT minute = 100 UDT seconds","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"This creates a consistent decimal system where all time units are powers of 10 relative to each other, making time calculations exceptionally straightforward.","category":"page"},{"location":"decimal_time_history/#Conversion-Table-(approximation)","page":"Decimal Time History","title":"Conversion Table (approximation)","text":"","category":"section"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Unit Seconds (SI) Minutes Hours h:mm:ss.sss\n1 UDT second 0.420768 0.0070128 0.00011688 0:00:00.421\n1 UDT minute 42.0768 0.70128 0.011688 0:00:42.077\n1 UDT hour 4207.680 70.128 1.1688 1:17:28\n1 UDT day 42076.8 701.28 11.688 11:40:15.680","category":"page"},{"location":"decimal_time_history/#Historical-Context","page":"Decimal Time History","title":"Historical Context","text":"","category":"section"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"Decimal time was part of a larger attempt at decimalization in revolutionary France (which also included decimalization of currency and metrication). Though the mandatory use of decimal time was suspended in 1795, the concept has resurfaced periodically throughout history as people recognize the practical benefits of a decimal time system for scientific and computational purposes.","category":"page"},{"location":"decimal_time_history/","page":"Decimal Time History","title":"Decimal Time History","text":"The Universal Decimal Time package implements this concept in a modern, consistent way that's optimized for computational use while maintaining historical connections to previous decimal time systems.","category":"page"},{"location":"conversions/#Conversions","page":"Conversions","title":"Conversions","text":"","category":"section"},{"location":"conversions/#Converting-from-Dates.DateTime-to-UDT","page":"Conversions","title":"Converting from Dates.DateTime to UDT","text":"","category":"section"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"using Dates\nusing UniversalDecimalTime\n\ndt = DateTime(2024, 1, 1, 12, 0, 0)\nudt = UDT(dt)\n\nprintln(udt)","category":"page"},{"location":"conversions/#Converting-from-UDTDate-to-UDT","page":"Conversions","title":"Converting from UDTDate to UDT","text":"","category":"section"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"using UniversalDecimalTime\n\nudt_date = UDTDate(200)\nudt = UDT(udt_date)\n\nprintln(udt)","category":"page"},{"location":"conversions/#Converting-from-Dates.Date-to-UDTDate","page":"Conversions","title":"Converting from Dates.Date to UDTDate","text":"","category":"section"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"using Dates\nusing UniversalDecimalTime\n\ndate = Date(2024, 1, 1)\nudt_date = UDTDate(date)\n\nprintln(udt_date)","category":"page"},{"location":"conversions/#Converting-from-UDT-to-UDTDate","page":"Conversions","title":"Converting from UDT to UDTDate","text":"","category":"section"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"using UniversalDecimalTime\n\nudt = UDT(10000)\nudt_date = UDTDate(udt)\n\nprintln(udt_date)","category":"page"},{"location":"conversions/#Converting-from-UDT-to-Dates.DateTime","page":"Conversions","title":"Converting from UDT to Dates.DateTime","text":"","category":"section"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"using Dates\nusing UniversalDecimalTime\n\nudt = UDT(10000)\ndatetime = convert(DateTime, udt)\n\nprintln(datetime)","category":"page"},{"location":"conversions/#Converting-from-Dates.Date-to-UDTDate-2","page":"Conversions","title":"Converting from Dates.Date to UDTDate","text":"","category":"section"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"using Dates\nusing UniversalDecimalTime\n\ndate = Date(2024, 1, 1)\nudt_date = UDTDate(date)\n\nprintln(udt_date)","category":"page"},{"location":"conversions/#Converting-from-UDTDate-to-Dates.Date","page":"Conversions","title":"Converting from UDTDate to Dates.Date","text":"","category":"section"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"using Dates\nusing UniversalDecimalTime\n\nudt_date = UDTDate(200)\ndate = convert(Date, udt_date)\n\nprintln(date)","category":"page"},{"location":"conversions/#Converting-from-UDTPeriod-to-UDT","page":"Conversions","title":"Converting from UDTPeriod to UDT","text":"","category":"section"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"```julia using UniversalDecimalTime","category":"page"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"year = UDTYear(1) udt = convert(UDT, year)","category":"page"},{"location":"conversions/","page":"Conversions","title":"Conversions","text":"println(udt)","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = UniversalDecimalTime","category":"page"},{"location":"#Universal-Decimal-Time","page":"Home","title":"Universal Decimal Time","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Universal Decimal Time (UDT) is a decimal time system where time is organized in powers of 10. This package provides a complete implementation of UDT for the Julia programming language.","category":"page"},{"location":"#Features","page":"Home","title":"Features","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Complete decimal calendar system:\n1 year = 10 months\n1 month = 10 weeks\n1 week = 10 days\n1 day = 10 hours\n1 hour = 100 minutes\n1 minute = 100 seconds\nEpoch set at January 1, 2000, 00:00:00 UTC (UDT year 0)\nSeamless conversion to/from standard DateTime\nFull arithmetic operations\nString parsing and formatting\nComprehensive test suite","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"To install the package, use the Julia package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using Pkg\nPkg.add(\"UniversalDecimalTime\")","category":"page"},{"location":"#Quick-Example","page":"Home","title":"Quick Example","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using UniversalDecimalTime\n\n# Create a UDT timestamp\nudt = UDT(0010, 3, 1, 1, 5, 30, 75)\n# Output: 0010-03-01-01:UDT:05:30:75\n\n# Get current UDT time\nnow_udt = udt_now()\ntoday_udt = udt_today()\n\n# Convert from standard DateTime\ndt = DateTime(2023, 10, 15, 14, 30, 25)\nudt_time = UDT(dt)\n\n# Arithmetic operations\nudt + UDTDay(1)      # Add one UDT day\nudt - UDTHour(2)     # Subtract two UDT hours","category":"page"},{"location":"ranges/#Range-Support","page":"Range Support","title":"Range Support","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"Universal Decimal Time provides comprehensive range support, allowing you to create sequences of UDT timestamps or dates with specified steps. This is particularly useful for time series analysis, batch processing, and generating time-based sequences.","category":"page"},{"location":"ranges/#Basic-Range-Construction","page":"Range Support","title":"Basic Range Construction","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"Ranges in Universal Decimal Time follow Julia's standard range syntax: start:step:stop.","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"using UniversalDecimalTime\n\n# Create a range of UDT timestamps (daily increments)\ndaily_range = UDT(0, 0, 0, 0):UDTDay(1):UDT(0, 0, 0, 5)\n# 0000-00-00-00:UDT:00:00:00:UDTDay(1):0000-00-00-05\n\n# Create a range of UDT dates (weekly increments)\nweekly_range = UDTDate(0, 0, 0, 0):UDTWeek(1):UDTDate(0, 0, 2, 0)\n# 0000-00-00-00:UDTWeek(1):0000-00-02-00","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"Note: Unlike standard Julia ranges, UDT ranges require an explicit step. The syntax start:stop will throw an error.","category":"page"},{"location":"ranges/#Range-Properties","page":"Range Support","title":"Range Properties","text":"","category":"section"},{"location":"ranges/#Length","page":"Range Support","title":"Length","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"You can determine the number of elements in a range using length:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"julia> length(UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,5))\n6\n\njulia> length(UDT(0,0,0,0):UDTDay(2):UDT(0,0,0,5))\n3","category":"page"},{"location":"ranges/#Empty-Ranges","page":"Range Support","title":"Empty Ranges","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"An empty range is created when the step direction doesn't move from start toward stop:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"julia> r = UDT(0,0,0,5):UDTDay(1):UDT(0,0,0,0)\n0000-00-00-05:UDTDay(1):0000-00-00-00\n\njulia> isempty(r)\ntrue\n\njulia> length(r)\n0","category":"page"},{"location":"ranges/#First-and-Last-Elements","page":"Range Support","title":"First and Last Elements","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"julia> r = UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,5)\n\njulia> first(r)\n0000-00-00-00:UDT:00:00:00\n\njulia> last(r)\n0000-00-00-05:UDT:00:00:00","category":"page"},{"location":"ranges/#Range-Operations","page":"Range Support","title":"Range Operations","text":"","category":"section"},{"location":"ranges/#Iteration","page":"Range Support","title":"Iteration","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"You can iterate through a range using standard Julia iteration:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"for timestamp in UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,5)\n    println(timestamp)\nend\n# Prints all timestamps from 0000-00-00-00 to 0000-00-00-05","category":"page"},{"location":"ranges/#Indexing","page":"Range Support","title":"Indexing","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"Ranges support 1-based indexing:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"julia> r = UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,5)\n\njulia> r[1]\n0000-00-00-00:UDT:00:00:00\n\njulia> r[3]\n0000-00-00-02:UDT:00:00:00\n\njulia> r[end]\n0000-00-00-05:UDT:00:00:00","category":"page"},{"location":"ranges/#Membership-Testing","page":"Range Support","title":"Membership Testing","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"Check if a timestamp is in a range using in (∈):","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"julia> udt = UDT(0,0,0,3)\n\njulia> udt in UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,5)\ntrue\n\njulia> udt in UDT(0,0,0,0):UDTDay(2):UDT(0,0,0,5)\ntrue\n\njulia> udt in UDT(0,0,0,0):UDTDay(4):UDT(0,0,0,5)\nfalse","category":"page"},{"location":"ranges/#Reversal","page":"Range Support","title":"Reversal","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"Reverse a range using reverse:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"julia> r = UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,5)\n\njulia> reverse(r)\n0000-00-00-05:UDTDay(-1):0000-00-00-00","category":"page"},{"location":"ranges/#Range-Arithmetic","page":"Range Support","title":"Range Arithmetic","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"You can add or subtract periods from entire ranges:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"julia> r = UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,5)\n\njulia> r + UDTDay(2)\n0000-00-00-02:UDTDay(1):0000-00-00-07\n\njulia> r - UDTDay(1)\n0000-00-00-(-1):UDTDay(1):0000-00-00-04","category":"page"},{"location":"ranges/#Range-Types","page":"Range Support","title":"Range Types","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"Universal Decimal Time supports ranges with different period types:","category":"page"},{"location":"ranges/#Time-Based-Ranges","page":"Range Support","title":"Time-Based Ranges","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"# Hourly range\nhourly_range = UDT(0,0,0,0,0,0,0):UDTHour(1):UDT(0,0,0,0,5,0,0)\n\n# Minute range\nminute_range = UDT(0,0,0,0,0,0,0):UDTMinute(10):UDT(0,0,0,0,0,50,0)\n\n# Second range\nsecond_range = UDT(0,0,0,0,0,0,0):UDTSecond(10):UDT(0,0,0,0,0,0,50)","category":"page"},{"location":"ranges/#Date-Based-Ranges","page":"Range Support","title":"Date-Based Ranges","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"# Year range\nyear_range = UDTDate(0):UDTYear(1):UDTDate(5)\n\n# Month range\nmonth_range = UDTDate(0,0,0,0):UDTMonth(1):UDTDate(0,2,0,0)\n\n# Week range\nweek_range = UDTDate(0,0,0,0):UDTWeek(1):UDTDate(0,0,2,0)","category":"page"},{"location":"ranges/#Advanced-Range-Operations","page":"Range Support","title":"Advanced Range Operations","text":"","category":"section"},{"location":"ranges/#Range-Filtering","page":"Range Support","title":"Range Filtering","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"You can filter ranges using standard Julia filtering:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"# Get only even days\nr = UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,9)\neven_days = filter(x -> udt_day(x) % 2 == 0, r)\n# [0000-00-00-00, 0000-00-00-02, ..., 0000-00-00-08]","category":"page"},{"location":"ranges/#Range-Broadcasting","page":"Range Support","title":"Range Broadcasting","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"Ranges can be used in broadcasting operations:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"r = UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,5)\noffsets = [UDTDay(1), UDTDay(2)]\n\nresult = r .+ offsets\n# Two ranges: one offset by 1 day, one by 2 days","category":"page"},{"location":"ranges/#Range-Sorting","page":"Range Support","title":"Range Sorting","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"Ranges maintain ordering properties:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"r = UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,5)\nneg_r = UDT(0,0,0,5):-UDTDay(1):UDT(0,0,0,0)\n\nissorted(r)         # true\nissorted(neg_r)     # false\nissorted(reverse(neg_r))  # true","category":"page"},{"location":"ranges/#Performance-Considerations","page":"Range Support","title":"Performance Considerations","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"UDT ranges are designed to be memory-efficient. They don't store all elements but calculate them on demand:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"No memory overhead: A range representing 100 years of timestamps uses the same memory as a range of 2 timestamps\nFast operations: Length calculation and indexing are O(1) operations\nType stability: All range operations are type-stable for performance","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"When you need to materialize a range into an array, use collect:","category":"page"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"timestamp_array = collect(UDT(0,0,0,0):UDTDay(1):UDT(0,0,0,30))","category":"page"},{"location":"ranges/#Common-Patterns","page":"Range Support","title":"Common Patterns","text":"","category":"section"},{"location":"ranges/#Generating-a-sequence-of-timestamps","page":"Range Support","title":"Generating a sequence of timestamps","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"# Generate hourly timestamps for a UDT day\ntimestamps = UDT(0,0,0,0,0,0,0):UDTHour(1):UDT(0,0,0,0,9,0,0)","category":"page"},{"location":"ranges/#Processing-time-intervals","page":"Range Support","title":"Processing time intervals","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"# Process data in weekly intervals\nfor week_start in UDTDate(0):UDTWeek(1):UDTDate(0,0,9,0)\n    week_end = week_start + UDTWeek(1)\n    # Process data from week_start to week_end\nend","category":"page"},{"location":"ranges/#Finding-specific-time-points","page":"Range Support","title":"Finding specific time points","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"# Find all timestamps where hour is 5\nfive_oclock = filter(x -> udt_hour(x) == 5, \n                    UDT(0,0,0,0):UDTHour(1):UDT(0,0,0,9,9,99,99))","category":"page"},{"location":"ranges/#Limitations","page":"Range Support","title":"Limitations","text":"","category":"section"},{"location":"ranges/","page":"Range Support","title":"Range Support","text":"UDT ranges require explicit steps (no default step values)\nRanges with zero step throw an ArgumentError\nOnly integer steps are supported (no fractional periods)","category":"page"}]
}
